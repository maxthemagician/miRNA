t$version(index)
t$version[inde6x
dasw
t$version[index]
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if is.empty(p2):
p2 = 0
t$Freq[index[p]] = t$Freq[index[p]] + t$Freq[index[p2]]
}
}
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(is.empty(p2)){p2 = 0}
t$Freq[index[p]] = t$Freq[index[p]] + t$Freq[index[p2]]
}
}
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(length(p2)){p2 = 0}
t$Freq[index[p]] = t$Freq[index[p]] + t$Freq[index[p2]]
}
}
index[p]
t$Freq[index[p]]
t$Freq[index[p2]]
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(length(p2)){p2 = 0}else{p2=t$Freq[index[p2]]}
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(plyr::empty(p2)){p2 = 0}else{p2=t$Freq[index[p2]]}
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
plyr::empty(p2)
rlang::is_empty(p2)
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(rlang::is_empty(p2)){p2 = 0}else{p2=t$Freq[index[p2]]}
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
index = which(t$species==org)
index
t$version[index]
View(new_table)
for (org in t$species[1:3]) {
print(org)
rbind(t, c(org, 4, 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
if(rlang::is_empty(p2)){p2=t$Freq[index[p2]]}else{p2=t$Freq[index[p2]]}
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
View(t)
t = rbind(t, c(org, 4, 0))
View(t)
t = as.data.frame(table(filtered))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, 5, 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
View(t)
t = as.data.frame(table(filtered))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, "5", 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
t = rbind(t,c("Caenorhabditis elegans", 5,0))
rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Caenorhabditis elegans", "5", 0))
rbind(t , c("Caenorhabditis elegans", "5", 0))
t = as.data.frame(table(filtered))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t$version[64:66] = 5
t = as.data.frame(table(filtered))
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
View(filtered)
filtered = rbind(filtered , c("Caenorhabditis elegans", 5))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
t = as.data.frame(table(filtered))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t)
t = as.data.frame(t)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
t$Freq[1]
t = as.data.frame(t,stringsAsFactors = T)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
t$Freq[1]
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
mastertable = as.data.frame(new_table)
ids_mature = which(mastertable["3p_mat_ID"]!="")
filtered = mastertable[ids_mature,c("species", "version")]
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t,stringsAsFactors = T)
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, "5", 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = t$Freq[index[p]] + p2
}
}
which(t$species==org)
t$version[index]
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, "5", 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = t$Freq[index[p]] + as.numeric(p2)
}
}
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, "5", 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = as.numeric(t$Freq[index[p]]) + as.numeric(p2)
}
}
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t,stringsAsFactors = T)
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
View(t)
for (org in t$species[1:3]) {
print(org)
t = rbind(t, c(org, "5", 0))
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = as.numeric(t$Freq[index[p]]) + as.numeric(p2)
}
}
jpeg("stat_3c.jpg", width = 1024, height = 720)
ggplot(t, aes (y = t$Freq, x=as.numeric(as.character(t$Var1))))+geom_point()+geom_line() +
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version")
dev.off()
mature = t
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(t, aes (y = Freq, x=as.numeric(as.character(c$Var1)), colour = Var2))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
t
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(t, aes (y = t$Freq, x=as.numeric(as.character(t$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
ggplot(t, aes (y = t$Freq, x=as.numeric(as.character(t$version)), colour = t$species))+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(t, aes (y = t$Freq, x=as.numeric(as.character(t$version)), colour = t$species))+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature = t[order(as.numeric(as.character(t$version))),]
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
# task 3
# a)
# number of miRNAs for each species in version 22
number = table(new_table[,1])
# contains Versionnumber, Species, added miRNA for this version and species
version_number = as.data.frame(table(new_table[,11],new_table[,1]))
# version_number sorted by version 1-22
c = version_number[order(as.numeric(as.character(version_number$Var1))),]
c
# sum up count of miRNAs per species per version
for(i in 4:length(rownames(c))){
c$Freq[i] = c$Freq[i]+c$Freq[i-3]
}
c = as.data.frame(c)
jpeg("stat_3a.jpg", width = 1024, height = 720)
ggplot(c, aes (y = Freq, x=as.numeric(as.character(c$Var1)), colour = Var2))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA precursers per species and version") +
theme(legend.title=element_blank())
dev.off()
mature = t[order(as.numeric(as.character(t$version))),]
mature
ggplot(mature, aes (y = mature$Freq, x=mature$version), colour = t$species)+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=mature$version), colour = t$species)+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature = t[order(as.numeric(as.character(t$version))),]
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=mature$version), colour = t$species)+geom_line()+geom_point()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature = as.data.frame(mature)
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature = as.data.frame(mature,stringsAsFactors = T )
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature
mature$version
mature$version = as.numeric(mature$version)
mature$version
mature$Freq = as.numeric(mature$Freq)
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species")
dev.off()
mature = t[order(as.numeric(as.character(t$version))),]
mature = as.data.frame(mature,stringsAsFactors = T )
mature$version = as.numeric(mature$version)
mature$Freq = as.numeric(mature$Freq)
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per version, per species") +
theme(legend.title=element_blank())
dev.off()
mature = t[order(as.numeric(as.character(t$version))),]
mature = as.data.frame(mature,stringsAsFactors = T )
mature$version = as.numeric(mature$version)
mature$Freq = as.numeric(mature$Freq)
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = t$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per species and version") +
theme(legend.title=element_blank())
dev.off()
View(mature)
mastertable = as.data.frame(new_table)
ids_mature = which(mastertable["3p_mat_ID"]!="")
filtered = mastertable[ids_mature,c("species", "version")]
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t,stringsAsFactors = T)
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = as.numeric(t$Freq[index[p]]) + as.numeric(p2)
}
}
mature = t[order(as.numeric(as.character(t$version))),]
mature = as.data.frame(mature,stringsAsFactors = T )
mature$version = as.numeric(mature$version)
mature$Freq = as.numeric(mature$Freq)
# print
jpeg("stat_3b.jpg", width = 1024, height = 720)
ggplot(mature, aes (y = mature$Freq, x=as.numeric(as.character(mature$version)), colour = mature$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per species and version") +
theme(legend.title=element_blank())
dev.off()
ids_pre = which(mast=tertable["3p_mat_ID"]=="")
filtered = mastertable[ids_pre,c("species", "version")]
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t,stringsAsFactors = T)
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = as.numeric(t$Freq[index[p]]) + as.numeric(p2)
}
}
pre = t[order(as.numeric(as.character(t$version))),]
pre = as.data.frame(pre,stringsAsFactors = T )
pre$version = as.numeric(pre$version)
pre$Freq = as.numeric(pre$Freq)
jpeg("stat_3b2.jpg", width = 1024, height = 720)
ggplot(pre, aes (y = pre$Freq, x=as.numeric(as.character(pre$version)), colour = pre$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per species and version") +
theme(legend.title=element_blank())
dev.off()
ids_pre = which(mast=tertable["3p_mat_ID"]=="")
ids_pre = which(masttertable["3p_mat_ID"]=="")
ids_pre = which(mastertable["3p_mat_ID"]=="")
filtered = mastertable[ids_pre,c("species", "version")]
t = as.data.frame(table(filtered),stringsAsFactors = FALSE)
t = rbind(t , c("Caenorhabditis elegans", 5, 0))
t = rbind(t , c("Mus musculus", 5, 0))
t = rbind(t , c("Homo sapiens", 5, 0))
t = t[order(as.numeric(as.character(t$version))),]
t = as.data.frame(t,stringsAsFactors = T)
t$version = as.numeric(t$version)
t$Freq = as.numeric(t$Freq)
t$Freq[1] =t$Freq[1]*2
t$Freq[2] =t$Freq[2]*2
t$Freq[3] =t$Freq[3]*2
for (org in t$species[1:3]) {
print(org)
index = which(t$species==org)
for(i in 2:22){
p = which(t$version[index]==i)
p2 = which(t$version[index]==i-1)
p2 = t$Freq[index[p2]]
t$Freq[index[p]] = as.numeric(t$Freq[index[p]]) + as.numeric(p2)
}
}
pre = t[order(as.numeric(as.character(t$version))),]
pre = as.data.frame(pre,stringsAsFactors = T )
pre$version = as.numeric(pre$version)
pre$Freq = as.numeric(pre$Freq)
jpeg("stat_3b2.jpg", width = 1024, height = 720)
ggplot(pre, aes (y = pre$Freq, x=as.numeric(as.character(pre$version)), colour = pre$species))+geom_point()+geom_line()+
xlab("miRBase Version") +
ylab("miRNA entrys") +
ggtitle("Number of miRNA matures per species and version") +
theme(legend.title=element_blank())
dev.off()
ration = cbind(pre$species, pre$version, pre$Freq, mature$Freq)
View(ration)
# number of miRNAs for each species in version 21
number = table(new_table[,1])
# contains Versionnumber, Species, added miRNA for this version and species
version_number = as.data.frame(table(new_table[,11],new_table[,1]))
# version_number sorted by version 1-21
c = version_number[order(as.numeric(as.character(version_number$Var1))),]
c
mastertable = as.data.frame(mastertable)
ids = which(mastertable["3p_mat_ID"]!="")
t = as.data.frame(table(mastertable[,11][ids]))
t
mastertable = as.data.frame(mastertable)
ids2 = which(mastertable["3p_mat_ID"]=="")
t2 = as.data.frame(table(mastertable[,11][ids2]))
t2
library(stringr)
library(stringi)
mastertable$precursor_A <- str_count(mastertable$miRNA_prec_seq, "A")/stri_length(mastertable$miRNA_prec_seq)
mastertable$precursor_C <- str_count(mastertable$miRNA_prec_seq, "C")/stri_length(mastertable$miRNA_prec_seq)
mastertable$precursor_G <- str_count(mastertable$miRNA_prec_seq, "G")/stri_length(mastertable$miRNA_prec_seq)
mastertable$precursor_U <- str_count(mastertable$miRNA_prec_seq, "U")/stri_length(mastertable$miRNA_prec_seq)
mastertable$mature_5p_A <- str_count(mastertable$`5p_mat_seq`, "A")/stri_length(mastertable$`5p_mat_seq`)
mastertable$mature_5p_C <- str_count(mastertable$`5p_mat_seq`, "C")/stri_length(mastertable$`5p_mat_seq`)
mastertable$mature_5p_G <- str_count(mastertable$`5p_mat_seq`, "G")/stri_length(mastertable$`5p_mat_seq`)
mastertable$mature_5p_U <- str_count(mastertable$`5p_mat_seq`, "U")/stri_length(mastertable$`5p_mat_seq`)
mastertable$mature_3p_A <- str_count(mastertable$`3p_mat_seq`, "A")/stri_length(mastertable$`3p_mat_seq`)
mastertable$mature_3p_C <- str_count(mastertable$`3p_mat_seq`, "C")/stri_length(mastertable$`3p_mat_seq`)
mastertable$mature_3p_G <- str_count(mastertable$`3p_mat_seq`, "G")/stri_length(mastertable$`3p_mat_seq`)
mastertable$mature_3p_U <- str_count(mastertable$`3p_mat_seq`, "U")/stri_length(mastertable$`3p_mat_seq`)
write.csv(mastertable, paste0(outputfile,"mastertable_ACGU.csv"))
mastertable$precursor_A
